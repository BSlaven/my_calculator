[{"D:\\Development\\React_aplikacije\\react_calculator\\src\\index.js":"1","D:\\Development\\React_aplikacije\\react_calculator\\src\\App.js":"2","D:\\Development\\React_aplikacije\\react_calculator\\src\\Calculator\\Calculator.js":"3","D:\\Development\\React_aplikacije\\react_calculator\\src\\Display\\Display.js":"4"},{"size":196,"mtime":1630603547195,"results":"5","hashOfConfig":"6"},{"size":213,"mtime":1630867569146,"results":"7","hashOfConfig":"6"},{"size":6015,"mtime":1637269229965,"results":"8","hashOfConfig":"6"},{"size":792,"mtime":1637091901486,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"g8cuyv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"D:\\Development\\React_aplikacije\\react_calculator\\src\\index.js",[],["19","20"],"D:\\Development\\React_aplikacije\\react_calculator\\src\\App.js",[],"D:\\Development\\React_aplikacije\\react_calculator\\src\\Calculator\\Calculator.js",["21"],"D:\\Development\\React_aplikacije\\react_calculator\\src\\Display\\Display.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":21,"column":9,"nodeType":"28","endLine":32,"endColumn":4,"suggestions":"29"},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","The 'keyboardInputHandler' function makes the dependencies of useEffect Hook (at line 37) change on every render. To fix this, wrap the definition of 'keyboardInputHandler' in its own useCallback() Hook.","VariableDeclarator",["32"],"no-global-assign","no-unsafe-negation",{"desc":"33","fix":"34"},"Wrap the definition of 'keyboardInputHandler' in its own useCallback() Hook.",{"range":"35","text":"36"},[638,1002],"useCallback(e => {\r\n    const inputValue = e.key;\r\n    if(inputValue === 'Enter') {\r\n      equalClickHandler();\r\n    }\r\n    console.log(`Your keypress value is: ${inputValue}`);\r\n    const inputAsNumber = parseInt(inputValue);\r\n    if(!inputAsNumber) return;\r\n    const copyState = { ...calcState };\r\n    copyState.nextOperand += inputValue;\r\n    setCalcState(copyState);\r\n  })"]